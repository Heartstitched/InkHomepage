
OnOtherGhostTalk
{
	LOGGING("====================================================================")
	LOGGING("reference0: %(reference0)")
	LOGGING("reference1: %(reference1)")
	LOGGING("reference2: %(reference2)")
	LOGGING("reference3: %(reference3)")
	LOGGING("reference4: %(reference4)")
	LOGGING("reference5: %(reference5)")
	
	/*
	
	reference0 - the ghost name
	reference1 - sakura name of the ghost
	reference2 - some misc stuff we're probably not worried about
	reference3 - the ID of the event that made the other ghost talk
	reference4 - the script from the other ghost
	reference5 - the references passed to the other ghost, delimited by C_BYTE1
	
	*/
	
	if reference0 == "Error"
	{
		_talk = reference4				
			if "Ink" _in_ _talk
				"\0\s[3]\f[bold,true]You know i can hear you, yeah??\f[bold,false]"
				
			if "making something" _in_ _talk
				"\0\s[3]\f[bold,true]Oooh what'cha making??\f[bold,false]"
			
			if "pal" _in_ _talk
				"\0\s[0]\f[bold,true]Hey that's my word!\f[bold,false]"
				
			// elseif "" _in_ _talk
				// "\0\b[4]"
		
	}




}




//—————————————————————————————— This bit below handles turning this mode on and off ——————————————————————————————
OnSecondChange
{

 //extra checks because hour12 goes 0-11 and im feral
	// if pomoOn && (pomohour == hour12 || (pomohour == 12 && hour12 == 0)) && TOINT(pomomin) == minute && pomosec == second {
		// pomoOn = 0
		// pomosdone++
		// "\0\s[6]\_v[bell.wav]Your work session is over! \x\c"
		// --
		
		// OnPomoOver
	// }
	
	//ditto
	// if pomoBreakOn && (pomohour == hour12 || (pomohour == 12 && hour12 == 0)) && TOINT(pomomin) == minute && pomosec == second {
		// pomoBreakOn = 0
		// "\0\s[5]\_v[bell.wav]Your break is over.\w8 Hope you rested some!\x\c"
		// --
		// OnPomoEnd
	// }
	
	
	if ErrorIsOpenTalk && !ListenForError
	{
		"\![raise,OnListenForError,start]"
	}
	elseif !ErrorIsOpenTalk && ListenForError
	{
		"\![raise,OnListenForError,end]"
	}
	
		if passsec == 60
 		{
	 	passsec = 0
 		passmin = passmin + 1
		}
 	else
 		{
	 	passsec = passsec + 1
		}
	if mikireflag == 1 && reference1 == 0
		{
			EndMikireTalk
 		}
		mikireflag = reference1
	if reference2 == 1
	{
 		//This dialogue is for when the two characters are overlapping each other. If you don't want your characters to care, you can just leave this blank.
		
 		//"\0\s[0]Me and Triangle are overlapping.\w8\1\s[19]That's strange since your resolution is %screenwidthx%screenheight, %(username). Shouldn't we have enough space?\4\e"
		
		//You can see here the use of two envelopes, screenwidth and screenheight, to tell the user their resolution. Oddly, they are not in parentheses. I'm not sure why this is, but they don't display right otherwise. An odd quirk with these two envelopes.
		//Note also how Triangle moves away at the end of the dialogue. This is due to the \4 tag. That will make any one character move away from the other if they are able. I talked about this tag and its counterpart tag \5 in the SakuraScript page on the walkthrough.
	}

}

OnListenForError
{
	LOGGING("====================================================================")
	LOGGING("OnListenForError")
	LOGGING("reference: %(reference)")
	LOGGING("ListenForError before: %(ListenForError)")
	LOGGING("ErrorIsOpenTalk: %(ErrorIsOpenTalk)")
	if reference0 == "start"
	{
		ListenForError = 1
		"\![set,otherghosttalk,after]"
	}
	else
	{
		ListenForError = 0
		"\![set,otherghosttalk,false]"
	}
	LOGGING("ListenForError after: %(ListenForError)")
	LOGGING
}

ErrorIsOpenTalk
{
	ASEARCH("Error",ghostexlist) != -1
}

On_otherghostname
{
	ghostexlist = ""
	foreach reference; _ghost
	{
		ghostexlist ,= _ghost[0,C_BYTE1]
	}
}



//—————————————————————————————— Other Ghosts Open/Close ——————————————————————————————

//---- OnGhostCalling ---------------------------------------------------------------
//when you call another ghost. It activates immediately, so write dialogue accordingly.
OnGhostCalling
{
	case reference0
	{

		when "Error"
		{
			"\0\s[0]\f[bold,true]\f[bold,false]"
		}
		when "Gin"
		{
			"\0\s[0]\f[bold,true]\f[bold,false]"
		}
		others
		{
			"\0\s[2]\f[bold,true]So long,\w3 %(reference0).\f[bold,false]\w8"
			
			"\0\s[1]\f[bold,true]%(reference4) has departed.\f[bold,false]\w8"
			
			"\0\s[2]\f[bold,true]Goodbye,\w4 %(reference0).\f[bold,false]\w8"
			
			"\0\s[2]\f[bold,true]That's it for %(reference4).\f[bold,false]\w8"
			--
			"\s[5]\n\n[half]"
			--
			"\f[bold,true]And hello to %(reference1)!\w8\f[bold,false]\e"
			
			"\f[bold,true]Now %(reference5) is here!\w8\f[bold,false]\e"
			
			"\f[bold,true]And hello to %(reference5)!\w8\f[bold,false]\e"
			
			"\f[bold,true]Now %(reference1) is here!\w8\f[bold,false]\e"
		}
	}
}

//when you close another ghost. Only activates after the other ghost is gone.
OnOtherGhostClosed
{
	case reference0
	{
		
		when "Gin"
		{
			"\0\s[0]\f[bold,true]\f[bold,false]"
		}
		when "Error"
		{
			"\0\s[5]\f[bold,true]Heeey where do you think you're going, Error??\f[bold,false]"
		}
		others
		{
			"\0\s[5]\f[bold,true]Bye bye,\w3 %(reference0)!\w8\f[bold,false]\e"
			
			"\0\s[2]\f[bold,true]Farewell,\w3 %(reference0).\w8\f[bold,false]\e"
			
			"\0\s[2]\f[bold,true]Goodbye,\w3 %(reference0).\w8\f[bold,false]\e"
			
			"\0\s[5]\f[bold,true]Seeya later,\w3 %(reference0)!\w8\f[bold,false]\e"
			
			"\0\s[2]\f[bold,true]Take care,\w3 %(reference0)!\w8\f[bold,false]\e"
			
			"\0\s[2]\f[bold,true]Seeya,\w3 %(reference0)!\w8\f[bold,false]\e"
			
			"\0\s[2]\f[bold,true]Aw, hope to see %(reference0) again sometime...\w8\f[bold,false]\e"
		}
	}
}

